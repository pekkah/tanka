@model HomeModel

@{
    ViewBag.PageTitle = ViewBag.Title;
}
<div class="row">
    <div class="articles">
        @foreach (var post in Model.Posts)
        {
            <div class="article">
                <article>
                    <hgroup>
                        <h1 class="page-header">
                            @Html.ActionLink(post.Title, "BlogPost", 
                           new { year=post.PublishedOn.Value.Year, month=post.PublishedOn.Value.Month, day=post.PublishedOn.Value.Day, slug=post.Slug})
                        </h1>
                        <h3 class="meta">
                            <small> Written by @post.Author on @post.PublishedOn.Value.ToString("d")</small>
                            <small>
                                @Html.ActionLink("","BlogPost", "Blog", null, null, "disqus_thread",
                               new
                               {
                                   year = post.PublishedOn.Value.Year,
                                   month = post.PublishedOn.Value.Month,
                                   day = post.PublishedOn.Value.Day,
                                   slug = post.Slug
                               },
                               new
                               {
                                   data_disqus_identifier = @post.Id,
                                   @class="badge"
                               })
                            </small>
                        </h3>
                    </hgroup>
                    <div class="tags">
                        @foreach (var tag in post.Tags)
                        {
                            @: <span><a href="/tags/@tag">@tag.ToUpperInvariant()</a></span>
                        }
                    </div>
                    <div class="content">
                        @Html.Raw(post.Content)
                    </div>
                </article>
            </div>
        }
    </div>
    <div class="right-side">
        @await Component.InvokeAsync("History")
        @await Component.InvokeAsync("TagCloud")
    </div>
</div>
@section footer {
    @Disqus.Render(null)
}